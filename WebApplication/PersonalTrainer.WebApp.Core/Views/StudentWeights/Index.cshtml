@model ResultViewModel<Application.Extensions.Paging.PaginatedList<Application.StudentWeights.Dtos.StudentWeightDto>>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

@using (Html.BeginForm())
{
<p>
    Select student: @Html.DropDownList("studentId", (SelectList)ViewData["Student"], new { onchange = "this.form.submit();" })
</p>
}

@Html.RenderPartialAsync("_StatusMessage", Model)
<table class="table">
    <thead>
        <tr>
            <th>
                Student Name
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Data.FirstOrDefault().Weight)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Data.FirstOrDefault().CreatedAt)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Data.FirstOrDefault().UpdatedAt)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Data)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.StudentName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Weight)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedAt)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UpdatedAt)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.Data.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Data.HasNextPage ? "disabled" : "";

    Html.ActionLink("Previous", "Index", new { page = (Model.Data.PageIndex - 1) }, new { @class = "btn btn-default " + @prevDisabled });
    Html.ActionLink("Next", "Index", new { page = (Model.Data.PageIndex + 1) }, new { @class = "btn btn-default " + nextDisabled });
}